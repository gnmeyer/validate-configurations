---
name: Validate Configurations

on:
  workflow_call:

jobs:
  config-validation: #test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get config.yml files
        run: |
            #!/bin/bash

            # Define color codes
            RED='\033[0;31m'
            GREEN='\033[0;32m'
            CYAN='\033[0;36m'
            NC='\033[0m' # No Color
            ITALIC='\033[3m'
            BOLD='\033[1m'
            YELLOW='\033[1;33m'
            LIGHT_GREEN='\033[1;32m'
            LIGHT_RED='\033[1;31m'
            MAGENTA='\033[0;35m'
            BLUE='\033[0;34m'

            counter=0
            total_files=0
            fail_count=0

            echo -e "\n${BOLD}Hello from ${CYAN}${BOLD}validate-config.yml!${NC} \xF0\x9F\x91\x8B \n"
            echo -e "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ"

            echo -e "üöÄ ${YELLOW}${BOLD}[Step 1]: ${NC}${BOLD}Running ${LIGHT_GREEN}${ITALIC}${BOLD}validation script${NC} üîÑ"
            echo -e "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"

            # Debug: Show current directory
            #echo -e "Current directory: $(pwd)\n"

            root=$(pwd)

            # Find colconfig.yaml files
            find . -name "colconfig.yaml" > files.txt

            # Debug: Show contents of files.txt
            echo -e "${BOLD}Files found:${NC}\n$(cat files.txt)\n"

            # Get the total number of config files
            while read -r line; do
                total_files=$((total_files+1))
            done < files.txt

            while read -r line; do

                #increment counter
                counter=$((counter+1))

                dir=$(dirname "$line") # Get the config directory

                echo -e "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ"
                echo -e "${CYAN}${BOLD}[${YELLOW}$counter${NC}${CYAN}/${YELLOW}$total_files${NC}${CYAN}]${NC} üß™ ${YELLOW}${ITALIC}$dir/config.yaml${NC}"
                echo -e "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ"

                root_dir="${dir%/*/*}" # Get the root directory

                #DEBUG
                echo -e "üì§ ${ITALIC}Extracted Root Directory: ${CYAN}${ITALIC}$root_dir${NC} üîß"

                file_with_image=$(grep -rl "ghcr.io/liatrio/liatrio-otel-collector" $root_dir)

                #DEBUG
                echo -e "üìÅ ${ITALIC}Files containing the specified image reference: üîß\n     ${BLUE}${ITALIC}$file_with_image${NC}\n"

                while read -r line; do
                    if [[ $line == *"ghcr.io/liatrio/liatrio-otel-collector"* ]]; then
                        version=$(echo "$line" | awk -F':' '{print $3}')
                        echo -e "üîç ${ITALIC}Found Image Version: ${MAGENTA}${ITALIC}$version üîß${NC}\n"
                        break
                    fi
                done < "$file_with_image"

                cd $dir #Move into the config directory
                echo -e "üöÄ ${BOLD}Executing: ${ITALIC}${LIGHT_GREEN}docker run -v $(pwd):/config ghcr.io/liatrio/liatrio-otel-collector:$version validate --config /config/colconfig.yaml${NC} üê≥\n"

                output=$(docker run -v $(pwd):/config ghcr.io/liatrio/liatrio-otel-collector:$version validate --config /config/colconfig.yaml 2>&1 || true)
                if echo "$output" | grep -q "Error:"; then
                    echo -e "‚ùå ${BOLD}Validation ${LIGHT_RED}${BOLD}${ITALIC}failed${NC}"
                    echo -e "${ITALIC}${output}"
                    fail_count=$((fail_count+1))

                else
                  echo -e "‚úÖ ${BOLD}Validation ${LIGHT_GREEN}${BOLD}${ITALIC}succeeded${NC}"

                fi
                cd $root
            done < files.txt

            echo -e "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"


            if((counter>0)); then
                echo -e "üö® ${NC}${BOLD}Validation ${LIGHT_RED}${BOLD}${ITALIC}failed ${NC}${BOLD}for ${LIGHT_RED}${BOLD}${ITALIC}$fail_count${NC}${BOLD}/$total_files configurations! üö®\n"
                exit 1
            else
                echo -e "‚úÖ ${BOLD}All configurations are ${LIGHT_GREEN}${BOLD}${ITALIC}valid! üéâ\n"
            fi
            exit 0